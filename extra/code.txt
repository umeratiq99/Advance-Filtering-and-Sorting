 // let skips=0;
  // if(!Number.isNaN(skip)&& skip>0)
  // {
  //     skips=skip;
  // }
  // let takes= 100;
  // if(!Number.isNaN(size) && size>0 && size<100)
  // {
  //     takes=take;
  // }



// router.get("/", async (req, res) => {
//   try {
//     const users = await Users.findAll({
//       limit: 3,
//       offset: 0,

//       order: [
//         ["id", "DESC"], //ASC of aces and DESC for descending
//       ],
//     });
//    console.log(users);
//     res.send(users);
//   } catch (err) {
//     console.error(err.message);
//   }
// });

// const validate = (req, res, next) => {
//   const skip = Number.parseInt(req.query.skip);
//   const take = Number.parseInt(req.query.take);
//   query(skip).notEmpty();

//   return res.status(400).json({ error: "Lora" });
  
//   next();
  
  // const order = (req.query.order).toString();
  // if (Number.isNaN(skip) || skip < 0) {
  //   return res.status(400).json({ error: "Invalid Field for skip" });
  // }
  // if (Number.isNaN(take) || take < 0) {
  //   return res.status(400).json({ error: "Invalid Field for take" });
  // }
  // if (order !== "ascend" && order !== "descend") {
  //   console.log(typeof(order));
  //   return res.status(400).json({ error: "Invalid Field for order" });
  // }

//};